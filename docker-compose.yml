version: '3.8'

services:
  web:
    image: nginx:alpine
    ports:
      - "8049:80"                     # Снаружи 8049 → внутри 80
    networks:
      - frontend-net
    volumes:
      # 1) Конфиг nginx
      - ./nginx/app.conf:/etc/nginx/conf.d/default.conf:ro
      # 2) Статические файлы
      - ./nginx/index.html:/usr/share/nginx/html/index.html:ro
      - ./nginx/styles.css:/usr/share/nginx/html/styles.css:ro
      - ./nginx/script.js:/usr/share/nginx/html/script.js:ro
    depends_on:
      - simple_python_app

  simple_python_app:
    build: ./simple_python_app      # собираем образ из вашего Dockerfile
    image: simple_python_app:latest
    ports:
      - "5000:8000"                  # снаружи 5000 → внутри 8000 (uvicorn)
    environment:
      API_DB_HOST: db
      API_DB_PORT: "5432"
      API_DB_NAME: api
      API_DB_USER: apiuser
      API_DB_PASS: apipass
    networks:
      - frontend-net
      - backend-net
    depends_on:
      db:
        condition: service_healthy   # ждем, пока БД будет здоровой

  db:
    image: postgres:16.2-alpine
    environment:
      POSTGRES_DB: api
      POSTGRES_USER: apiuser
      POSTGRES_PASSWORD: apipass
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - backend-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

networks:
  frontend-net:
  backend-net:

volumes:
  dbdata:
